//
//  main.cpp
//  VVP_10
//
//  Created by Роберт Скиталинский on 22.12.2021.
//Даны два целых числа: A, B. Проверить истинность высказывания: «Справедливы неравенства A > 2 и B ≤ 3»

#include <iostream>
#include <math.h>

int main(){
    int a,b;
    std::cout << "Введите число A ";
    std::cin >> a;
    std::cout << "Введите число B ";
    std::cin >> b;
    if (a > 2 and b <= 3){
        std::cout << "При данных значениях А и В неравернсва А > 2 и B <= 3 верны!";
    }
    else{
        std::cout << "При данных значениях А и В неравернсва А > 2 и B <= 3 неверны!";
    }
}/*
//Даны три целых числа: A, B, C. Проверить истинность высказывания: «Справедливо двойное неравенство A < B < C».
int main(){
    int a,b,c;
    std::cout << "Введите число А: ";
    std::cin >> a;
    std::cout << "Введите число B: ";
    std::cin >> b;
    std::cout << "Введите число C: ";
    std::cin >> c;
    if (b > a and b < c)
        std::cout << "Неравенсвто A < B < C верно! " << std::endl;
    else
        std::cout << "Неравенство A < B < C неверно! " << std::endl;
    return 0;
}

//Дано целое положительное число. Проверить истинность высказывания: «Данное число является четным двузначным».

int main(){
    int a;
    std::cout << "Введите целое положительное число: ";
    std::cin >> a;
    if (a % 2 == 0 and (a / 10 >= 1 and a / 10 < 10))
        std::cout << "Данное число является четным двузначным" << std::endl;
    else
        std::cout << "Данное число не является четным двузначным" << std::endl;
    return 0;
}

//Дано трехзначное число. Проверить истинность высказывания: «Цифры данного числа образуют возрастающую или убывающую последовательность».
int main(){
    int a,b,c,d,x;
    std::cout << "Введите трехзначное числo: ";
    std::cin >> a;
    b = a / 100; //первая циферка
    c = a % 10;  // последняя цифра
    d = a % 100;
    x = d / 10; //mid letter
    std::cout << b << " " << x << " " << c;
    std::cout << std::endl;
    if (b < x and x < c)
        std::cout << "Цифры данного числа образуют возрастающую последовательность." << std::endl;
    else
        if (c < x and  x < b)
            std::cout << "Цифры данного числа образуют убывающую последовательность." << std::endl;
        else
            std::cout << "Цифры данного числа не образуют ни возрастающую, ни убывающую последовательность." << std::endl;
    return 0;
    
}
 


//Дано четырехзначное число. Проверить истинность высказывания: «Данное число читается одинаково слева направо и справа налево».
int main(){
    int a,x,y,q;
    std::cout << " Введите четырехзначное число: ";
    std::cin >> a;
    x = a % 100;
    y = a / 100;
    q = y % 10 * 10 + y / 10;
    if (x == y or x == q)
        std::cout << "Данное число читается одинаково слева направо и справа налево." << std::endl;
    else
        std::cout << "Данное число не читается одинаково слева направо и справа налево." << std::endl;
    std::cout << x << " " << y << " " << q << std::endl;
    return 0;
}

//Даны целые числа a, b, c, являющиеся сторонами некоторого треугольника. Проверить истинность высказывания: «Треугольник со сторонами a, b, c является прямоугольным».
int main(){
    int a,b,c,x,y,z;
    std::cin >> a;
    std::cin >> b;
    std::cin >> c;
    x = pow(c,2);
    y = pow(b,2);
    z = pow(a,2);
    if (x == y + z)
        std::cout << "Треугольник со сторонами a, b, c является прямоугольным";
    else
        std::cout << "Треугольник со сторонами a, b, c не является прямоугольным";
    return 0;
}
*/
//Даны целые числа a, b, c. Проверить истинность высказывания: «Существует треугольник со сторонами a, b, c».

/*
int main(){
    int a,b,c;
    std::cout << "Введите сторону А: ";
    std::cin >> a;
    std::cout << "Введите сторону B: ";
    std::cin >> b;
    std::cout << "Введите сторону C: ";
    std::cin >> c;
    if (a + b > c and b + c > a and a + c > b)
        std::cout << " Треугольник со сторонами: " << a << " " << b << " " << c << " существует";
    else
        std::cout << " Треугольника со сторонами: " << a << ", " << b << ", " << c << " не существует ";
    return 0;
}

*/
